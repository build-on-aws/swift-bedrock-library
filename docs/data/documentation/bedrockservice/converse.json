{"hierarchy":{"paths":[["doc:\/\/BedrockService\/documentation\/BedrockService"]]},"metadata":{"roleHeading":"Article","role":"article","title":"Converse API","modules":[{"name":"BedrockService"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Converse API provides a unified interface for text-based interactions with foundation models. It supports multi-turn conversations, system prompts, and maintains conversation history automatically."}]},{"anchor":"Basic-Text-Conversation","type":"heading","level":2,"text":"Basic Text Conversation"},{"type":"paragraph","inlineContent":[{"text":"Start a simple conversation with a foundation model:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let model: BedrockModel = .nova_lite","","guard model.hasConverseModality() else {","    throw MyError.incorrectModality(\"\\(model.name) does not support converse\")","}","","var builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Tell me about rainbows\")","","var reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")","","\/\/ Continue the conversation","builder = try ConverseRequestBuilder(from: builder, with: reply)","    .withPrompt(\"Do you think birds can see them too?\")","","reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")"]},{"anchor":"Inference-Parameters","type":"heading","level":2,"text":"Inference Parameters"},{"type":"paragraph","inlineContent":[{"text":"Control the model’s behavior with inference parameters:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Tell me about rainbows\")","    .withMaxTokens(512)","    .withTemperature(0.2)","    .withStopSequences([\"END\", \"STOP\"])","    .withSystemPrompts([\"Be concise\", \"Use simple language\"])","","let reply = try await bedrock.converse(with: builder)"]},{"anchor":"System-Prompts","type":"heading","level":2,"text":"System Prompts"},{"type":"paragraph","inlineContent":[{"text":"Guide the model’s behavior with system prompts:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let builder = try ConverseRequestBuilder(with: model)","    .withSystemPrompts([","        \"You are a helpful assistant\",","        \"Always provide accurate information\",","        \"Be concise in your responses\"","    ])","    .withPrompt(\"What is machine learning?\")"]},{"anchor":"Custom-Messages","type":"heading","level":2,"text":"Custom Messages"},{"type":"paragraph","inlineContent":[{"text":"Build messages manually for more control:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Simple text message","let reply = try await bedrock.converse(","    with: model,","    conversation: [Message(\"What day of the week is it?\")]",")","","\/\/ With inference parameters","let reply = try await bedrock.converse(","    with: model,","    conversation: [Message(\"What day of the week is it?\")],","    maxTokens: 512,","    temperature: 1,","    topP: 0.8,","    stopSequences: [\"THE END\"],","    systemPrompts: [\"Today is Wednesday, make sure to mention that.\"]",")"]}],"kind":"content"}],"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming","doc:\/\/BedrockService\/documentation\/BedrockService\/Vision","doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning"],"anchor":"Related-Documentation"},{"title":"Core Features","identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/ImageGeneration","doc:\/\/BedrockService\/documentation\/BedrockService\/TextGeneration","doc:\/\/BedrockService\/documentation\/BedrockService\/Embeddings"],"anchor":"Core-Features","generated":true}],"abstract":[{"text":"Build conversational AI applications with the Converse API","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bedrockservice\/converse"]}],"identifier":{"url":"doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","interfaceLanguage":"swift"},"references":{"doc://BedrockService/documentation/BedrockService/Vision":{"url":"\/documentation\/bedrockservice\/vision","type":"topic","kind":"article","title":"Vision","abstract":[{"text":"Add images to your conversations","type":"text"}],"role":"article","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Vision"},"doc://BedrockService/documentation/BedrockService/Documents":{"url":"\/documentation\/bedrockservice\/documents","title":"Documents","kind":"article","abstract":[{"text":"Process documents with foundation models","type":"text"}],"role":"article","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","type":"topic"},"doc://BedrockService/documentation/BedrockService/Embeddings":{"kind":"article","type":"topic","url":"\/documentation\/bedrockservice\/embeddings","role":"article","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Embeddings","abstract":[{"text":"Generate vector embeddings for semantic analysis","type":"text"}],"title":"Embeddings"},"bedrock.png":{"variants":[{"url":"\/images\/BedrockService\/bedrock.png","traits":["1x","light"]}],"type":"image","identifier":"bedrock.png","alt":"BedrockService"},"doc://BedrockService/documentation/BedrockService/Streaming":{"url":"\/documentation\/bedrockservice\/streaming","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Get real-time responses with streaming"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming","title":"Streaming"},"doc://BedrockService/documentation/BedrockService":{"url":"\/documentation\/bedrockservice","images":[{"identifier":"bedrock.png","type":"icon"}],"type":"topic","kind":"symbol","title":"BedrockService","abstract":[{"text":"A Swift library for interacting with Amazon Bedrock foundation models","type":"text"}],"role":"collection","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService"},"doc://BedrockService/documentation/BedrockService/TextGeneration":{"url":"\/documentation\/bedrockservice\/textgeneration","title":"Text Generation","kind":"article","abstract":[{"text":"Generate text using the InvokeModel API","type":"text"}],"role":"article","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/TextGeneration","type":"topic"},"doc://BedrockService/documentation/BedrockService/Tools":{"type":"topic","title":"Tools","kind":"article","role":"article","abstract":[{"type":"text","text":"Enable function calling with foundation models"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","url":"\/documentation\/bedrockservice\/tools"},"doc://BedrockService/documentation/BedrockService/ImageGeneration":{"url":"\/documentation\/bedrockservice\/imagegeneration","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Create and modify images with foundation models"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/ImageGeneration","title":"Image Generation"},"doc://BedrockService/documentation/BedrockService/Reasoning":{"title":"Reasoning","kind":"article","type":"topic","role":"article","abstract":[{"text":"Access the model’s reasoning process","type":"text"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning","url":"\/documentation\/bedrockservice\/reasoning"}}}