{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/BedrockService\/documentation\/BedrockService","doc:\/\/BedrockService\/documentation\/BedrockService\/TaskType"]]},"metadata":{"extendedModule":"Swift","modules":[{"name":"BedrockService","relatedModules":["Swift"]}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Instance Method","role":"symbol","title":"hash(into:)","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:14BedrockService8TaskTypeO"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"text":".","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bedrockservice\/tasktype\/hash(into:)"]}],"identifier":{"url":"doc:\/\/BedrockService\/documentation\/BedrockService\/TaskType\/hash(into:)","interfaceLanguage":"swift"},"references":{"bedrock.png":{"type":"image","identifier":"bedrock.png","alt":"BedrockService","variants":[{"url":"\/images\/BedrockService\/bedrock.png","traits":["1x","light"]}]},"doc://BedrockService/documentation/BedrockService":{"kind":"symbol","type":"topic","url":"\/documentation\/bedrockservice","abstract":[{"text":"A Swift library for interacting with Amazon Bedrock foundation models","type":"text"}],"role":"collection","title":"BedrockService","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService","images":[{"type":"icon","identifier":"bedrock.png"}]},"doc://BedrockService/documentation/BedrockService/TaskType":{"title":"TaskType","url":"\/documentation\/bedrockservice\/tasktype","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/TaskType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskType"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskType"}],"kind":"symbol","abstract":[]},"doc://BedrockService/documentation/BedrockService/TaskType/hash(into:)":{"type":"topic","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/TaskType\/hash(into:)","title":"hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}],"url":"\/documentation\/bedrockservice\/tasktype\/hash(into:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","abstract":[],"role":"symbol"}}}