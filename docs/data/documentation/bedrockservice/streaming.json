{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Streaming allows you to receive model responses in real-time as they’re generated, providing a better user experience for interactive applications."}]},{"type":"heading","anchor":"Basic-Streaming","text":"Basic Streaming","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the same "},{"code":"ConverseRequestBuilder","type":"codeVoice"},{"type":"text","text":" with "},{"code":"converseStream","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let model: BedrockModel = .nova_lite","","guard model.hasConverseModality(.streaming) else {","    throw MyError.incorrectModality(\"\\(model.name) does not support streaming\")","}","","let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Tell me about rainbows\")","","let reply = try await bedrock.converseStream(with: builder)","","for try await element in reply.stream {","    switch element {","    case .messageStart(let role):","        print(\"Message started with role: \\(role)\")","        ","    case .text(_, let text):","        print(text, terminator: \"\")","        ","    case .messageComplete(_):","        print(\"\\n\")","        ","    case .metaData(let metaData):","        print(\"Metadata: \\(metaData)\")","        ","    default:","        break","    }","}"]},{"type":"heading","anchor":"Stream-Elements","text":"Stream Elements","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The stream provides different types of elements:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".messageStart(Role)"},{"text":" - Beginning of a message","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".text(Int, String)"},{"text":" - Partial text content with index","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".reasoning(Int, String)"},{"text":" - Partial reasoning content with index","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".toolUse(Int, ToolUseBlock)"},{"text":" - Complete tool use response","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".messageComplete(Message)"},{"text":" - Complete message with all content","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".metaData(ResponseMetadata)"},{"text":" - Response metadata including token usage","type":"text"}]}]}]},{"type":"heading","anchor":"Interactive-Chat-Loop","text":"Interactive Chat Loop","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Build an interactive chat application:"}]},{"type":"codeListing","syntax":"swift","code":["var builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Introduce yourself\")","","while true {","    let stream = try await bedrock.converseStream(with: builder)","    var assistantMessage: Message = Message(\"empty\")","    ","    for try await element in stream {","        switch element {","        case .text(_, let text):","            print(text, terminator: \"\")","            ","        case .messageComplete(let message):","            assistantMessage = message","            print(\"\\n\")","            ","        default:","            break","        }","    }","    ","    print(\"You: \")","    guard let prompt = readLine(), prompt != \"quit\" else { break }","    ","    builder = try ConverseRequestBuilder(from: builder, with: assistantMessage)","        .withPrompt(prompt)","}"]},{"type":"heading","anchor":"Low-Level-Stream-Access","text":"Low-Level Stream Access","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For maximum control, access the raw AWS SDK stream:"}]},{"type":"codeListing","syntax":"swift","code":["let reply = try await bedrock.converseStream(with: builder)","\/\/ Access reply.rawStream for the low-level AWS SDK stream"]}]}],"hierarchy":{"paths":[["doc:\/\/BedrockService\/documentation\/BedrockService"]]},"metadata":{"title":"Streaming","modules":[{"name":"BedrockService"}],"roleHeading":"Article","role":"article"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","abstract":[{"type":"text","text":"Get real-time responses with streaming"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bedrockservice\/streaming"]}],"identifier":{"url":"doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning"],"anchor":"Related-Documentation"},{"title":"Advanced Topics","identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","doc:\/\/BedrockService\/documentation\/BedrockService\/Vision","doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning"],"anchor":"Advanced-Topics","generated":true}],"references":{"doc://BedrockService/documentation/BedrockService/Vision":{"kind":"article","type":"topic","url":"\/documentation\/bedrockservice\/vision","abstract":[{"type":"text","text":"Add images to your conversations"}],"role":"article","title":"Vision","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Vision"},"doc://BedrockService/documentation/BedrockService":{"kind":"symbol","type":"topic","url":"\/documentation\/bedrockservice","abstract":[{"text":"A Swift library for interacting with Amazon Bedrock foundation models","type":"text"}],"role":"collection","title":"BedrockService","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService","images":[{"type":"icon","identifier":"bedrock.png"}]},"doc://BedrockService/documentation/BedrockService/Converse":{"title":"Converse API","url":"\/documentation\/bedrockservice\/converse","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","type":"topic","role":"article","kind":"article","abstract":[{"text":"Build conversational AI applications with the Converse API","type":"text"}]},"bedrock.png":{"variants":[{"url":"\/images\/BedrockService\/bedrock.png","traits":["1x","light"]}],"type":"image","identifier":"bedrock.png","alt":"BedrockService"},"doc://BedrockService/documentation/BedrockService/Tools":{"kind":"article","type":"topic","url":"\/documentation\/bedrockservice\/tools","abstract":[{"type":"text","text":"Enable function calling with foundation models"}],"role":"article","title":"Tools","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Tools"},"doc://BedrockService/documentation/BedrockService/Documents":{"kind":"article","type":"topic","url":"\/documentation\/bedrockservice\/documents","abstract":[{"type":"text","text":"Process documents with foundation models"}],"role":"article","title":"Documents","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Documents"},"doc://BedrockService/documentation/BedrockService/Reasoning":{"title":"Reasoning","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning","url":"\/documentation\/bedrockservice\/reasoning","type":"topic","role":"article","abstract":[{"type":"text","text":"Access the model’s reasoning process"}],"kind":"article"}}}