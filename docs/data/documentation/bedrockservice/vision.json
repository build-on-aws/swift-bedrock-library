{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BedrockService\/documentation\/BedrockService\/Vision"},"abstract":[{"type":"text","text":"Add images to your conversations"}],"metadata":{"role":"article","modules":[{"name":"BedrockService"}],"title":"Vision","roleHeading":"Article"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming"],"anchor":"Related-Documentation"},{"title":"Advanced Topics","identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning","doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming"],"anchor":"Advanced-Topics","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","hierarchy":{"paths":[["doc:\/\/BedrockService\/documentation\/BedrockService"]]},"sections":[],"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Vision capabilities allow you to send images to foundation models for analysis, description, and question answering about visual content."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Basic Image Analysis","anchor":"Basic-Image-Analysis"},{"inlineContent":[{"type":"text","text":"Send an image with your prompt:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let model: BedrockModel = .nova_lite","","guard model.hasConverseModality(.vision) else {","    throw MyError.incorrectModality(\"\\(model.name) does not support vision\")","}","","let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Can you tell me about this plant?\")","    .withImage(format: .jpeg, source: base64EncodedImage)","","let reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")"]},{"level":2,"type":"heading","text":"Supported Image Formats","anchor":"Supported-Image-Formats"},{"inlineContent":[{"type":"text","text":"BedrockService supports common image formats:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"JPEG (","type":"text"},{"code":".jpeg","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"PNG (","type":"text"},{"code":".png","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"GIF (","type":"text"},{"code":".gif","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"WebP ("},{"code":".webp","type":"codeVoice"},{"type":"text","text":")"}]}]}]},{"text":"Image with Parameters","type":"heading","level":2,"anchor":"Image-with-Parameters"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Combine images with inference parameters:"}]},{"syntax":"swift","type":"codeListing","code":["let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Describe this image in detail\")","    .withImage(format: .jpeg, source: base64EncodedImage)","    .withTemperature(0.8)","    .withMaxTokens(1000)","","let reply = try await bedrock.converse(with: builder)"]},{"text":"Multi-turn Vision Conversations","type":"heading","level":2,"anchor":"Multi-turn-Vision-Conversations"},{"type":"paragraph","inlineContent":[{"text":"Continue conversations that include images:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["var builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"What type of flower is this?\")","    .withImage(format: .jpeg, source: base64EncodedImage)","","var reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")","","\/\/ Continue without sending the image again","builder = try ConverseRequestBuilder(from: builder, with: reply)","    .withPrompt(\"Where can I find those flowers?\")","","reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")"]},{"anchor":"Using-ImageBlock","type":"heading","level":2,"text":"Using ImageBlock"},{"type":"paragraph","inlineContent":[{"text":"For more control, create ","type":"text"},{"code":"ImageBlock","type":"codeVoice"},{"text":" objects directly:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let imageBlock = ImageBlock(format: .jpeg, source: base64EncodedImage)","","let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Analyze this image\")","    .withImage(imageBlock)"]},{"anchor":"Streaming-with-Vision","type":"heading","level":2,"text":"Streaming with Vision"},{"inlineContent":[{"type":"text","text":"Vision works seamlessly with streaming:"}],"type":"paragraph"},{"code":["let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Describe what you see in this image\")","    .withImage(format: .png, source: base64EncodedImage)","","let stream = try await bedrock.converseStream(with: builder)","","for try await element in stream {","    switch element {","    case .text(_, let text):","        print(text, terminator: \"\")","    case .messageComplete(_):","        print(\"\\n\")","    default:","        break","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bedrockservice\/vision"]}],"references":{"doc://BedrockService/documentation/BedrockService/Reasoning":{"title":"Reasoning","kind":"article","type":"topic","role":"article","abstract":[{"text":"Access the modelâ€™s reasoning process","type":"text"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning","url":"\/documentation\/bedrockservice\/reasoning"},"bedrock.png":{"identifier":"bedrock.png","alt":"BedrockService","type":"image","variants":[{"url":"\/images\/BedrockService\/bedrock.png","traits":["1x","light"]}]},"doc://BedrockService/documentation/BedrockService/Streaming":{"url":"\/documentation\/bedrockservice\/streaming","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Get real-time responses with streaming"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming","title":"Streaming"},"doc://BedrockService/documentation/BedrockService":{"url":"\/documentation\/bedrockservice","images":[{"identifier":"bedrock.png","type":"icon"}],"type":"topic","kind":"symbol","title":"BedrockService","abstract":[{"text":"A Swift library for interacting with Amazon Bedrock foundation models","type":"text"}],"role":"collection","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService"},"doc://BedrockService/documentation/BedrockService/Tools":{"type":"topic","title":"Tools","kind":"article","role":"article","abstract":[{"type":"text","text":"Enable function calling with foundation models"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","url":"\/documentation\/bedrockservice\/tools"},"doc://BedrockService/documentation/BedrockService/Converse":{"url":"\/documentation\/bedrockservice\/converse","type":"topic","kind":"article","role":"article","abstract":[{"type":"text","text":"Build conversational AI applications with the Converse API"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","title":"Converse API"},"doc://BedrockService/documentation/BedrockService/Documents":{"url":"\/documentation\/bedrockservice\/documents","title":"Documents","kind":"article","abstract":[{"text":"Process documents with foundation models","type":"text"}],"role":"article","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","type":"topic"}}}