{"hierarchy":{"paths":[["doc:\/\/BedrockService\/documentation\/BedrockService"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming"],"title":"Related Documentation","anchor":"Related-Documentation"},{"identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning","doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming"],"title":"Advanced Topics","anchor":"Advanced-Topics","generated":true}],"identifier":{"url":"doc:\/\/BedrockService\/documentation\/BedrockService\/Vision","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bedrockservice\/vision"]}],"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Vision capabilities allow you to send images to foundation models for analysis, description, and question answering about visual content.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Basic-Image-Analysis","text":"Basic Image Analysis","type":"heading"},{"inlineContent":[{"text":"Send an image with your prompt:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let model: BedrockModel = .nova_lite","","guard model.hasConverseModality(.vision) else {","    throw MyError.incorrectModality(\"\\(model.name) does not support vision\")","}","","let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Can you tell me about this plant?\")","    .withImage(format: .jpeg, source: base64EncodedImage)","","let reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")"],"type":"codeListing"},{"level":2,"anchor":"Supported-Image-Formats","text":"Supported Image Formats","type":"heading"},{"inlineContent":[{"text":"BedrockService supports common image formats:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"JPEG ("},{"type":"codeVoice","code":".jpeg"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"PNG ("},{"type":"codeVoice","code":".png"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"GIF ("},{"type":"codeVoice","code":".gif"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"WebP ("},{"type":"codeVoice","code":".webp"},{"type":"text","text":")"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"anchor":"Image-with-Parameters","text":"Image with Parameters","type":"heading"},{"inlineContent":[{"text":"Combine images with inference parameters:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Describe this image in detail\")","    .withImage(format: .jpeg, source: base64EncodedImage)","    .withTemperature(0.8)","    .withMaxTokens(1000)","","let reply = try await bedrock.converse(with: builder)"],"type":"codeListing"},{"level":2,"anchor":"Multi-turn-Vision-Conversations","text":"Multi-turn Vision Conversations","type":"heading"},{"inlineContent":[{"text":"Continue conversations that include images:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"What type of flower is this?\")","    .withImage(format: .jpeg, source: base64EncodedImage)","","var reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")","","\/\/ Continue without sending the image again","builder = try ConverseRequestBuilder(from: builder, with: reply)","    .withPrompt(\"Where can I find those flowers?\")","","reply = try await bedrock.converse(with: builder)","print(\"Assistant: \\(reply)\")"],"type":"codeListing"},{"level":2,"anchor":"Using-ImageBlock","text":"Using ImageBlock","type":"heading"},{"inlineContent":[{"text":"For more control, create ","type":"text"},{"code":"ImageBlock","type":"codeVoice"},{"text":" objects directly:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let imageBlock = ImageBlock(format: .jpeg, source: base64EncodedImage)","","let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Analyze this image\")","    .withImage(imageBlock)"],"type":"codeListing"},{"level":2,"anchor":"Streaming-with-Vision","text":"Streaming with Vision","type":"heading"},{"inlineContent":[{"text":"Vision works seamlessly with streaming:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let builder = try ConverseRequestBuilder(with: model)","    .withPrompt(\"Describe what you see in this image\")","    .withImage(format: .png, source: base64EncodedImage)","","let stream = try await bedrock.converseStream(with: builder)","","for try await element in stream {","    switch element {","    case .text(_, let text):","        print(text, terminator: \"\")","    case .messageComplete(_):","        print(\"\\n\")","    default:","        break","    }","}"],"type":"codeListing"}],"kind":"content"}],"kind":"article","metadata":{"role":"article","title":"Vision","modules":[{"name":"BedrockService"}],"roleHeading":"Article"},"abstract":[{"text":"Add images to your conversations","type":"text"}],"references":{"doc://BedrockService/documentation/BedrockService/Streaming":{"url":"\/documentation\/bedrockservice\/streaming","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Streaming","abstract":[{"type":"text","text":"Get real-time responses with streaming"}],"type":"topic","role":"article","kind":"article","title":"Streaming"},"doc://BedrockService/documentation/BedrockService/Documents":{"url":"\/documentation\/bedrockservice\/documents","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Documents","abstract":[{"type":"text","text":"Process documents with foundation models"}],"type":"topic","role":"article","kind":"article","title":"Documents"},"doc://BedrockService/documentation/BedrockService":{"type":"topic","title":"BedrockService","url":"\/documentation\/bedrockservice","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService","role":"collection","images":[{"type":"icon","identifier":"bedrock.png"}],"kind":"symbol","abstract":[{"type":"text","text":"A Swift library for interacting with Amazon Bedrock foundation models"}]},"doc://BedrockService/documentation/BedrockService/Tools":{"type":"topic","title":"Tools","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Tools","url":"\/documentation\/bedrockservice\/tools","role":"article","kind":"article","abstract":[{"text":"Enable function calling with foundation models","type":"text"}]},"bedrock.png":{"identifier":"bedrock.png","variants":[{"url":"\/images\/BedrockService\/bedrock.png","traits":["1x","light"]}],"alt":"BedrockService","type":"image"},"doc://BedrockService/documentation/BedrockService/Reasoning":{"url":"\/documentation\/bedrockservice\/reasoning","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Reasoning","abstract":[{"type":"text","text":"Access the modelâ€™s reasoning process"}],"type":"topic","role":"article","kind":"article","title":"Reasoning"},"doc://BedrockService/documentation/BedrockService/Converse":{"url":"\/documentation\/bedrockservice\/converse","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","abstract":[{"type":"text","text":"Build conversational AI applications with the Converse API"}],"type":"topic","role":"article","kind":"article","title":"Converse API"}}}