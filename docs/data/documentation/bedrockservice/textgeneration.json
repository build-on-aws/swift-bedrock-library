{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"article","title":"Text Generation","modules":[{"name":"BedrockService"}],"roleHeading":"Article"},"identifier":{"url":"doc:\/\/BedrockService\/documentation\/BedrockService\/TextGeneration","interfaceLanguage":"swift"},"abstract":[{"text":"Generate text using the InvokeModel API","type":"text"}],"hierarchy":{"paths":[["doc:\/\/BedrockService\/documentation\/BedrockService"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"The InvokeModel API provides direct access to foundation models for text completion tasks. This is useful for simple text generation without the conversational context of the Converse API.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Basic-Text-Generation","text":"Basic Text Generation","type":"heading"},{"inlineContent":[{"text":"Generate text from a prompt:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let model: BedrockModel = .nova_micro","","guard model.hasTextModality() else {","    throw MyError.incorrectModality(\"\\(model.name) does not support text generation\")","}","","let textCompletion = try await bedrock.completeText(","    \"Write a story about a space adventure\",","    with: model",")","","print(textCompletion.completion)"],"type":"codeListing"},{"level":2,"anchor":"Generation-Parameters","text":"Generation Parameters","type":"heading"},{"inlineContent":[{"text":"Control text generation behavior:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let textCompletion = try await bedrock.completeText(","    \"Explain quantum computing in simple terms\",","    with: model,","    maxTokens: 1000,","    temperature: 0.7,","    topP: 0.9,","    topK: 250,","    stopSequences: [\"THE END\", \"CONCLUSION\"]",")","","print(textCompletion.completion)"],"type":"codeListing"},{"level":3,"anchor":"Parameter-Descriptions","text":"Parameter Descriptions","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"maxTokens","type":"text"}]},{"type":"text","text":": Maximum number of tokens to generate"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"temperature","type":"text"}]},{"type":"text","text":": Controls randomness (0.0 = deterministic, 1.0 = very random)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"topP","type":"text"}]},{"type":"text","text":": Nucleus sampling threshold (0.0-1.0)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"topK","type":"text"}]},{"type":"text","text":": Limits vocabulary to top K tokens"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"stopSequences","type":"text"}]},{"type":"text","text":": Strings that stop generation when encountered"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"anchor":"Model-Specific-Parameters","text":"Model-Specific Parameters","type":"heading"},{"inlineContent":[{"text":"Different models support different parameters:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Check what parameters a model supports","if let textModality = model.modality as? TextModality {","    let params = textModality.getParameters()","    ","    if params.temperature.isSupported {","        print(\"Temperature range: \\(params.temperature.minValue)-\\(params.temperature.maxValue ?? 1.0)\")","    }","    ","    if params.topK.isSupported {","        print(\"TopK supported with max: \\(params.topK.maxValue ?? \"unlimited\")\")","    } else {","        print(\"TopK not supported by this model\")","    }","}"],"type":"codeListing"},{"level":2,"anchor":"Use-Cases","text":"Use Cases","type":"heading"},{"level":3,"anchor":"Creative-Writing","text":"Creative Writing","type":"heading"},{"syntax":"swift","code":["let story = try await bedrock.completeText(","    \"Once upon a time in a magical forest\",","    with: model,","    temperature: 0.9, \/\/ High creativity","    maxTokens: 500",")"],"type":"codeListing"},{"level":3,"anchor":"Technical-Documentation","text":"Technical Documentation","type":"heading"},{"syntax":"swift","code":["let documentation = try await bedrock.completeText(","    \"## API Reference\\n\\nThe authenticate() function\",","    with: model,","    temperature: 0.3, \/\/ Low creativity, more factual","    maxTokens: 800",")"],"type":"codeListing"},{"level":3,"anchor":"Code-Generation","text":"Code Generation","type":"heading"},{"syntax":"swift","code":["let code = try await bedrock.completeText(","    \"\/\/ Swift function to calculate fibonacci numbers\\nfunc fibonacci(\",","    with: model,","    temperature: 0.1, \/\/ Very deterministic","    stopSequences: [\"\\n\\n\", \"\/\/ End\"]",")"],"type":"codeListing"},{"level":3,"anchor":"Structured-Output","text":"Structured Output","type":"heading"},{"syntax":"swift","code":["let jsonOutput = try await bedrock.completeText(","    \"Generate a JSON object representing a user profile:\",","    with: model,","    temperature: 0.2,","    stopSequences: [\"}\"],","    maxTokens: 200",")"],"type":"codeListing"},{"level":2,"anchor":"Error-Handling","text":"Error Handling","type":"heading"},{"inlineContent":[{"text":"Handle parameter validation and model errors:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["do {","    let completion = try await bedrock.completeText(","        \"Generate text\",","        with: model,","        temperature: 2.0 \/\/ Invalid temperature","    )","} catch BedrockServiceError.parameterOutOfRange(let param, let value, let range) {","    print(\"Parameter \\(param) value \\(value) outside range: \\(range)\")","} catch BedrockServiceError.notSupported(let feature) {","    print(\"Feature not supported: \\(feature)\")","} catch {","    print(\"Text generation failed: \\(error)\")","}"],"type":"codeListing"},{"level":2,"anchor":"Comparing-with-Converse-API","text":"Comparing with Converse API","type":"heading"},{"header":"row","rows":[[[{"inlineContent":[{"type":"text","text":"Feature"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"InvokeModel (Text)"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Converse API"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Conversation history"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"System prompts"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Tool calling"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Vision support"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Streaming"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Simple text completion"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"Lower latency"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}]]],"type":"table"},{"level":2,"anchor":"When-to-Use-Text-Generation","text":"When to Use Text Generation","type":"heading"},{"inlineContent":[{"type":"text","text":"Use the InvokeModel text generation API when you need:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Simple, one-shot text completion","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lower latency responses","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Direct control over model parameters"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"No conversation context required"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Use the Converse API when you need:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Multi-turn conversations"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System prompts and instructions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Tool calling capabilities"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Vision or document processing","type":"text"}]}]}]}]}],"kind":"article","seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","doc:\/\/BedrockService\/documentation\/BedrockService\/Embeddings"],"title":"Related Documentation"},{"anchor":"Core-Features","generated":true,"identifiers":["doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","doc:\/\/BedrockService\/documentation\/BedrockService\/ImageGeneration","doc:\/\/BedrockService\/documentation\/BedrockService\/Embeddings"],"title":"Core Features"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bedrockservice\/textgeneration"]}],"sections":[],"references":{"doc://BedrockService/documentation/BedrockService/Converse":{"url":"\/documentation\/bedrockservice\/converse","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Converse","abstract":[{"type":"text","text":"Build conversational AI applications with the Converse API"}],"type":"topic","role":"article","kind":"article","title":"Converse API"},"doc://BedrockService/documentation/BedrockService/Embeddings":{"abstract":[{"type":"text","text":"Generate vector embeddings for semantic analysis"}],"identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/Embeddings","type":"topic","url":"\/documentation\/bedrockservice\/embeddings","role":"article","kind":"article","title":"Embeddings"},"doc://BedrockService/documentation/BedrockService":{"type":"topic","title":"BedrockService","url":"\/documentation\/bedrockservice","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService","role":"collection","images":[{"type":"icon","identifier":"bedrock.png"}],"kind":"symbol","abstract":[{"type":"text","text":"A Swift library for interacting with Amazon Bedrock foundation models"}]},"bedrock.png":{"identifier":"bedrock.png","alt":"BedrockService","variants":[{"traits":["1x","light"],"url":"\/images\/BedrockService\/bedrock.png"}],"type":"image"},"doc://BedrockService/documentation/BedrockService/ImageGeneration":{"url":"\/documentation\/bedrockservice\/imagegeneration","type":"topic","role":"article","identifier":"doc:\/\/BedrockService\/documentation\/BedrockService\/ImageGeneration","title":"Image Generation","kind":"article","abstract":[{"type":"text","text":"Create and modify images with foundation models"}]}}}