{"includedArchiveIdentifiers":["BedrockService"],"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/quickstart","title":"Quick Start","type":"article"},{"path":"\/documentation\/bedrockservice\/authentication","title":"Authentication","type":"article"},{"title":"Core Features","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converse","title":"Converse API","type":"article"},{"path":"\/documentation\/bedrockservice\/imagegeneration","title":"Image Generation","type":"article"},{"path":"\/documentation\/bedrockservice\/textgeneration","title":"Text Generation","type":"article"},{"path":"\/documentation\/bedrockservice\/embeddings","title":"Embeddings","type":"article"},{"title":"Advanced Topics","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tools","title":"Tools","type":"article"},{"path":"\/documentation\/bedrockservice\/vision","title":"Vision","type":"article"},{"path":"\/documentation\/bedrockservice\/documents","title":"Documents","type":"article"},{"path":"\/documentation\/bedrockservice\/reasoning","title":"Reasoning","type":"article"},{"path":"\/documentation\/bedrockservice\/streaming","title":"Streaming","type":"article"},{"title":"Extending the Library","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/addingmodels","title":"Adding Models","type":"article"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockbodycodable","title":"BedrockBodyCodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockclientprotocol\/listfoundationmodels(input:)","title":"func listFoundationModels(input: ListFoundationModelsInput) async throws -> ListFoundationModelsOutput","type":"method"}],"path":"\/documentation\/bedrockservice\/bedrockclientprotocol","title":"BedrockClientProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockruntimeclientprotocol\/converse(input:)","title":"func converse(input: ConverseInput) async throws -> ConverseOutput","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockruntimeclientprotocol\/conversestream(input:)","title":"func converseStream(input: ConverseStreamInput) async throws -> ConverseStreamOutput","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockruntimeclientprotocol\/invokemodel(input:)","title":"func invokeModel(input: InvokeModelInput) async throws -> InvokeModelOutput","type":"method"}],"path":"\/documentation\/bedrockservice\/bedrockruntimeclientprotocol","title":"BedrockRuntimeClientProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimagemodality\/getconditionedtexttoimageparameters()","title":"func getConditionedTextToImageParameters() -> ConditionedTextToImageParameters","type":"method"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimagemodality\/getconditionedtexttoimagerequestbody(prompt:negativetext:nrofimages:cfgscale:seed:quality:resolution:)","title":"func getConditionedTextToImageRequestBody(prompt: String, negativeText: String?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) throws -> any BedrockBodyCodable","type":"method"}],"path":"\/documentation\/bedrockservice\/conditionedtexttoimagemodality","title":"ConditionedTextToImageModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/containsembeddings\/getembeddings()","title":"func getEmbeddings() -> Embeddings","type":"method"}],"path":"\/documentation\/bedrockservice\/containsembeddings","title":"ContainsEmbeddings","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/containsimagegeneration\/getgeneratedimage()","title":"func getGeneratedImage() -> ImageGenerationOutput","type":"method"}],"path":"\/documentation\/bedrockservice\/containsimagegeneration","title":"ContainsImageGeneration","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/containstextcompletion\/gettextcompletion()","title":"func getTextCompletion() throws -> TextCompletion","type":"method"}],"path":"\/documentation\/bedrockservice\/containstextcompletion","title":"ContainsTextCompletion","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversemodality\/conversefeatures","title":"var converseFeatures: [ConverseFeature]","type":"property"},{"path":"\/documentation\/bedrockservice\/conversemodality\/converseparameters","title":"var converseParameters: ConverseParameters","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversemodality\/getconversefeatures()","title":"func getConverseFeatures() -> [ConverseFeature]","type":"method"},{"path":"\/documentation\/bedrockservice\/conversemodality\/getconverseparameters()","title":"func getConverseParameters() -> ConverseParameters","type":"method"}],"path":"\/documentation\/bedrockservice\/conversemodality","title":"ConverseModality","type":"protocol"},{"path":"\/documentation\/bedrockservice\/conversestreamingmodality","title":"ConverseStreamingModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/crossregioninferencemodality\/crossregionprefix(forregion:)","title":"func crossRegionPrefix(forRegion: Region) -> String","type":"method"}],"path":"\/documentation\/bedrockservice\/crossregioninferencemodality","title":"CrossRegionInferenceModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/embeddingsmodality\/getembeddingsrequestbody(text:vectorsize:normalize:)","title":"func getEmbeddingsRequestBody(text: String, vectorSize: Int, normalize: Bool) throws -> any BedrockBodyCodable","type":"method"},{"path":"\/documentation\/bedrockservice\/embeddingsmodality\/getembeddingsresponsebody(from:)","title":"func getEmbeddingsResponseBody(from: Data) throws -> any ContainsEmbeddings","type":"method"},{"path":"\/documentation\/bedrockservice\/embeddingsmodality\/getparameters()","title":"func getParameters() -> EmbeddingsParameters","type":"method"}],"path":"\/documentation\/bedrockservice\/embeddingsmodality","title":"EmbeddingsModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagemodality\/getimageresponsebody(from:)","title":"func getImageResponseBody(from: Data) throws -> any ContainsImageGeneration","type":"method"},{"path":"\/documentation\/bedrockservice\/imagemodality\/getparameters()","title":"func getParameters() -> ImageGenerationParameters","type":"method"}],"path":"\/documentation\/bedrockservice\/imagemodality","title":"ImageModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageresolutionvalidator\/validateresolution(_:)","title":"func validateResolution(ImageResolution) throws","type":"method"}],"path":"\/documentation\/bedrockservice\/imageresolutionvalidator","title":"ImageResolutionValidator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagevariationmodality\/getimagevariationparameters()","title":"func getImageVariationParameters() -> ImageVariationParameters","type":"method"},{"path":"\/documentation\/bedrockservice\/imagevariationmodality\/getimagevariationrequestbody(prompt:negativetext:images:similarity:nrofimages:cfgscale:seed:quality:resolution:)","title":"func getImageVariationRequestBody(prompt: String?, negativeText: String?, images: [String], similarity: Double?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) throws -> any BedrockBodyCodable","type":"method"}],"path":"\/documentation\/bedrockservice\/imagevariationmodality","title":"ImageVariationModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/modality\/getname()","title":"func getName() -> String","type":"method"}],"path":"\/documentation\/bedrockservice\/modality","title":"Modality","type":"protocol"},{"path":"\/documentation\/bedrockservice\/parameters","title":"Parameters","type":"protocol"},{"path":"\/documentation\/bedrockservice\/streamingmodality","title":"StreamingModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/textmodality\/getparameters()","title":"func getParameters() -> TextGenerationParameters","type":"method"},{"path":"\/documentation\/bedrockservice\/textmodality\/gettextrequestbody(prompt:maxtokens:temperature:topp:topk:stopsequences:)","title":"func getTextRequestBody(prompt: String, maxTokens: Int?, temperature: Double?, topP: Double?, topK: Int?, stopSequences: [String]?) throws -> any BedrockBodyCodable","type":"method"},{"path":"\/documentation\/bedrockservice\/textmodality\/gettextresponsebody(from:)","title":"func getTextResponseBody(from: Data) throws -> any ContainsTextCompletion","type":"method"}],"path":"\/documentation\/bedrockservice\/textmodality","title":"TextModality","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/texttoimagemodality\/gettexttoimageparameters()","title":"func getTextToImageParameters() -> TextToImageParameters","type":"method"},{"path":"\/documentation\/bedrockservice\/texttoimagemodality\/gettexttoimagerequestbody(prompt:negativetext:nrofimages:cfgscale:seed:quality:resolution:)","title":"func getTextToImageRequestBody(prompt: String, negativeText: String?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) throws -> any BedrockBodyCodable","type":"method"}],"path":"\/documentation\/bedrockservice\/texttoimagemodality","title":"TextToImageModality","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/awspartition\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/awspartition\/dnssuffix","title":"var dnsSuffix: String","type":"property"},{"path":"\/documentation\/bedrockservice\/awspartition\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/awspartition\/defaultendpoint(region:service:)","title":"func defaultEndpoint(region: Region, service: String) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/awspartition\/aws","title":"static var aws: AWSPartition","type":"property"},{"path":"\/documentation\/bedrockservice\/awspartition\/awscn","title":"static var awscn: AWSPartition","type":"property"},{"path":"\/documentation\/bedrockservice\/awspartition\/awsiso","title":"static var awsiso: AWSPartition","type":"property"},{"path":"\/documentation\/bedrockservice\/awspartition\/awsisob","title":"static var awsisob: AWSPartition","type":"property"},{"path":"\/documentation\/bedrockservice\/awspartition\/awsisoe","title":"static var awsisoe: AWSPartition","type":"property"},{"path":"\/documentation\/bedrockservice\/awspartition\/awsisof","title":"static var awsisof: AWSPartition","type":"property"},{"path":"\/documentation\/bedrockservice\/awspartition\/awsusgov","title":"static var awsusgov: AWSPartition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/awspartition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/awspartition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/awspartition\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/awspartition\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bedrockservice\/awspartition\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/awspartition","title":"AWSPartition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/amazonimagerequestbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/amazonimagerequestbody\/colorguidedgeneration(prompt:colors:negativetext:referenceimage:nrofimages:cfgscale:seed:quality:resolution:)","title":"static func colorGuidedGeneration(prompt: String, colors: [String], negativeText: String?, referenceImage: String?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) -> AmazonImageRequestBody","type":"method"},{"path":"\/documentation\/bedrockservice\/amazonimagerequestbody\/conditionedtexttoimage(prompt:negativetext:nrofimages:cfgscale:seed:quality:resolution:)","title":"static func conditionedTextToImage(prompt: String, negativeText: String?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) -> AmazonImageRequestBody","type":"method"},{"path":"\/documentation\/bedrockservice\/amazonimagerequestbody\/imagevariation(referenceimages:prompt:negativetext:similarity:nrofimages:cfgscale:seed:quality:resolution:)","title":"static func imageVariation(referenceImages: [String], prompt: String?, negativeText: String?, similarity: Double?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) -> AmazonImageRequestBody","type":"method"},{"path":"\/documentation\/bedrockservice\/amazonimagerequestbody\/texttoimage(prompt:negativetext:nrofimages:cfgscale:seed:quality:resolution:)","title":"static func textToImage(prompt: String, negativeText: String?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) -> AmazonImageRequestBody","type":"method"}],"path":"\/documentation\/bedrockservice\/amazonimagerequestbody","title":"AmazonImageRequestBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/amazonimageresponsebody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/amazonimageresponsebody\/getgeneratedimage()","title":"func getGeneratedImage() -> ImageGenerationOutput","type":"method"}],"path":"\/documentation\/bedrockservice\/amazonimageresponsebody","title":"AmazonImageResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/anthropicrequestbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/anthropicrequestbody\/init(prompt:maxtokens:temperature:topp:topk:stopsequences:)","title":"init(prompt: String, maxTokens: Int, temperature: Double?, topP: Double?, topK: Int?, stopSequences: [String]?)","type":"init"}],"path":"\/documentation\/bedrockservice\/anthropicrequestbody","title":"AnthropicRequestBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/anthropicresponsebody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/anthropicresponsebody\/gettextcompletion()","title":"func getTextCompletion() throws -> TextCompletion","type":"method"}],"path":"\/documentation\/bedrockservice\/anthropicresponsebody","title":"AnthropicResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/init(id:name:modality:)","title":"init(id: String, name: String, modality: any Modality)","type":"init"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/maxpromptsize","title":"var maxPromptSize: Int?","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/modality","title":"let modality: any Modality","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/getconversemodality()","title":"func getConverseModality() throws -> any ConverseModality","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/getembeddingsmodality()","title":"func getEmbeddingsModality() throws -> any EmbeddingsModality","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/getimagemodality()","title":"func getImageModality() throws -> any ImageModality","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/getimagevariationmodality()","title":"func getImageVariationModality() throws -> any ImageVariationModality","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/getmodelidwithcrossregioninferenceprefix(region:)","title":"func getModelIdWithCrossRegionInferencePrefix(region: Region) -> String","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/gettextmodality()","title":"func getTextModality() throws -> any TextModality","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/gettexttoimagemodality()","title":"func getTextToImageModality() throws -> any TextToImageModality","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hasconditionedtexttoimagemodality()","title":"func hasConditionedTextToImageModality() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hasconversemodality()","title":"func hasConverseModality() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hasconversemodality(_:)","title":"func hasConverseModality(ConverseFeature) -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hasconversestreamingmodality()","title":"func hasConverseStreamingModality() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hasembeddingsmodality()","title":"func hasEmbeddingsModality() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hasimagemodality()","title":"func hasImageModality() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hasimagevariationmodality()","title":"func hasImageVariationModality() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hastextmodality()","title":"func hasTextModality() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hastexttoimagemodality()","title":"func hasTextToImageModality() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claude_opus_v4","title":"static let claude_opus_v4: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claude_sonnet_v4","title":"static let claude_sonnet_v4: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claude_sonnet_v4_5","title":"static let claude_sonnet_v4_5: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev1","title":"static let claudev1: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev2","title":"static let claudev2: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev2_1","title":"static let claudev2_1: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev3_5_haiku","title":"static let claudev3_5_haiku: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev3_5_sonnet","title":"static let claudev3_5_sonnet: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev3_5_sonnet_v2","title":"static let claudev3_5_sonnet_v2: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev3_7_sonnet","title":"static let claudev3_7_sonnet: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev3_haiku","title":"static let claudev3_haiku: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/claudev3_opus","title":"static let claudev3_opus: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/cohere_command_r","title":"static let cohere_command_R: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/cohere_command_r_plus","title":"static let cohere_command_R_plus: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/deepseek_r1_v1","title":"static let deepseek_r1_v1: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/instant","title":"static let instant: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/llama3_1_70b_instruct","title":"static let llama3_1_70b_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/llama3_1_8b_instruct","title":"static let llama3_1_8b_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/llama3_2_1b_instruct","title":"static let llama3_2_1b_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/llama3_2_3b_instruct","title":"static let llama3_2_3b_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/llama3_3_70b_instruct","title":"static let llama3_3_70b_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/llama3_70b_instruct","title":"static let llama3_70b_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/llama_3_8b_instruct","title":"static let llama_3_8b_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/mistral_7b_instruct","title":"static let mistral_7B_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/mistral_8x7b_instruct","title":"static let mistral_8x7B_instruct: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/mistral_large_2402","title":"static let mistral_large_2402: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/mistral_small_2402","title":"static let mistral_small_2402: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/nova_canvas","title":"static let nova_canvas: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/nova_lite","title":"static let nova_lite: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/nova_micro","title":"static let nova_micro: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/nova_pro","title":"static let nova_pro: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/openai_gpt_oss_120b","title":"static let openai_gpt_oss_120b: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/openai_gpt_oss_20b","title":"static let openai_gpt_oss_20b: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/titan_embed_text_v2","title":"static let titan_embed_text_v2: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/titan_image_g1_v1","title":"static let titan_image_g1_v1: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/titan_image_g1_v2","title":"static let titan_image_g1_v2: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/titan_text_g1_express","title":"static let titan_text_g1_express: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/titan_text_g1_lite","title":"static let titan_text_g1_lite: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/titan_text_g1_premier","title":"static let titan_text_g1_premier: BedrockModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/bedrockservice\/bedrockmodel\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/bedrockmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockmodel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bedrockservice\/bedrockmodel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/bedrockmodel","title":"BedrockModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/init(region:logger:bedrockclient:bedrockruntimeclient:authentication:)","title":"init(region: Region, logger: Logger?, bedrockClient: (any BedrockClientProtocol)?, bedrockRuntimeClient: (any BedrockRuntimeClientProtocol)?, authentication: BedrockAuthentication) async throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/completetext(_:with:maxtokens:temperature:topp:topk:stopsequences:)","title":"func completeText(String, with: BedrockModel, maxTokens: Int?, temperature: Double?, topP: Double?, topK: Int?, stopSequences: [String]?) async throws -> TextCompletion","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/converse(with:)","title":"func converse(with: ConverseRequestBuilder) async throws -> ConverseReply","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/converse(with:conversation:maxtokens:temperature:topp:stopsequences:systemprompts:tools:enablereasoning:maxreasoningtokens:)-4htx1","title":"func converse(with: BedrockModel, conversation: History, maxTokens: Int?, temperature: Double?, topP: Double?, stopSequences: [String]?, systemPrompts: [String]?, tools: [Tool]?, enableReasoning: Bool?, maxReasoningTokens: Int?) async throws -> Message","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/converse(with:conversation:maxtokens:temperature:topp:stopsequences:systemprompts:tools:enablereasoning:maxreasoningtokens:)-6k5rd","title":"func converse(with: BedrockModel, conversation: [Message], maxTokens: Int?, temperature: Double?, topP: Double?, stopSequences: [String]?, systemPrompts: [String]?, tools: [Tool]?, enableReasoning: Bool?, maxReasoningTokens: Int?) async throws -> Message","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/conversestream(with:)","title":"func converseStream(with: ConverseRequestBuilder) async throws -> ConverseReplyStream","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/conversestream(with:conversation:maxtokens:temperature:topp:stopsequences:systemprompts:tools:enablereasoning:maxreasoningtokens:)-82bfj","title":"func converseStream(with: BedrockModel, conversation: [Message], maxTokens: Int?, temperature: Double?, topP: Double?, stopSequences: [String]?, systemPrompts: [String]?, tools: [Tool]?, enableReasoning: Bool?, maxReasoningTokens: Int?) async throws -> ConverseReplyStream","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/conversestream(with:conversation:maxtokens:temperature:topp:stopsequences:systemprompts:tools:enablereasoning:maxreasoningtokens:)-y64r","title":"func converseStream(with: BedrockModel, conversation: History, maxTokens: Int?, temperature: Double?, topP: Double?, stopSequences: [String]?, systemPrompts: [String]?, tools: [Tool]?, enableReasoning: Bool?, maxReasoningTokens: Int?) async throws -> ConverseReplyStream","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/embed(_:with:vectorsize:normalize:)","title":"func embed(String, with: BedrockModel, vectorSize: Int, normalize: Bool) async throws -> Embeddings","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/generateimage(_:with:negativeprompt:nrofimages:cfgscale:seed:quality:resolution:)","title":"func generateImage(String, with: BedrockModel, negativePrompt: String?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) async throws -> ImageGenerationOutput","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/generateimagevariation(image:prompt:with:negativeprompt:similarity:nrofimages:cfgscale:seed:quality:resolution:)","title":"func generateImageVariation(image: String, prompt: String, with: BedrockModel, negativePrompt: String?, similarity: Double?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) async throws -> ImageGenerationOutput","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/generateimagevariation(images:prompt:with:negativeprompt:similarity:nrofimages:cfgscale:seed:quality:resolution:)","title":"func generateImageVariation(images: [String], prompt: String, with: BedrockModel, negativePrompt: String?, similarity: Double?, nrOfImages: Int?, cfgScale: Double?, seed: Int?, quality: ImageQuality?, resolution: ImageResolution?) async throws -> ImageGenerationOutput","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/listmodels()","title":"func listModels() async throws -> [ModelSummary]","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/validateimagevariationparams(model:nrofimages:cfgscale:resolution:seed:images:prompt:similarity:negativeprompt:)","title":"func validateImageVariationParams(model: BedrockModel, nrOfImages: Int?, cfgScale: Double?, resolution: ImageResolution?, seed: Int?, images: [String], prompt: String?, similarity: Double?, negativePrompt: String?) throws","type":"method"},{"path":"\/documentation\/bedrockservice\/bedrockservice\/validatetexttoimageparams(model:nrofimages:cfgscale:resolution:seed:prompt:negativeprompt:)","title":"func validateTextToImageParams(model: BedrockModel, nrOfImages: Int?, cfgScale: Double?, resolution: ImageResolution?, seed: Int?, prompt: String, negativePrompt: String?) throws","type":"method"}],"path":"\/documentation\/bedrockservice\/bedrockservice","title":"BedrockService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/init(colors:maxpromptsize:maxnegativepromptsize:similarity:)","title":"init(colors: Parameter<Int>, maxPromptSize: Int, maxNegativePromptSize: Int, similarity: Parameter<Double>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/colors","title":"let colors: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/negativeprompt","title":"let negativePrompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/prompt","title":"let prompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/similarity","title":"let similarity: Parameter<Double>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/validate(colors:prompt:negativeprompt:similarity:)","title":"func validate(colors: Int?, prompt: String?, negativePrompt: String?, similarity: Double?) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/colorguidedimagegenerationparameters","title":"ColorGuidedImageGenerationParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters\/init(maxpromptsize:maxnegativepromptsize:similarity:)","title":"init(maxPromptSize: Int, maxNegativePromptSize: Int, similarity: Parameter<Double>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters\/negativeprompt","title":"let negativePrompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters\/prompt","title":"let prompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters\/similarity","title":"let similarity: Parameter<Double>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters\/validate(prompt:negativeprompt:similarity:)","title":"func validate(prompt: String?, negativePrompt: String?, similarity: Double?) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/conditionedtexttoimageparameters","title":"ConditionedTextToImageParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converseparameters\/init(temperature:maxtokens:topp:stopsequences:maxpromptsize:maxreasoningtokens:)","title":"init(temperature: Parameter<Double>, maxTokens: Parameter<Int>, topP: Parameter<Double>, stopSequences: StopSequenceParams, maxPromptSize: Int?, maxReasoningTokens: Parameter<Int>)","type":"init"},{"path":"\/documentation\/bedrockservice\/converseparameters\/init(textgenerationparameters:maxreasoningtokens:)","title":"init(textGenerationParameters: TextGenerationParameters, maxReasoningTokens: Parameter<Int>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converseparameters\/maxreasoningtokens","title":"let maxReasoningTokens: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/converseparameters\/maxtokens","title":"let maxTokens: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/converseparameters\/prompt","title":"let prompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/converseparameters\/stopsequences","title":"let stopSequences: StopSequenceParams","type":"property"},{"path":"\/documentation\/bedrockservice\/converseparameters\/temperature","title":"let temperature: Parameter<Double>","type":"property"},{"path":"\/documentation\/bedrockservice\/converseparameters\/topp","title":"let topP: Parameter<Double>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converseparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/converseparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/converseparameters","title":"ConverseParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversereply\/init(_:)","title":"init(History) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/conversereply\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/conversereply\/init(withmessage:)","title":"init(withMessage: Message) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversereply\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversereply\/gethistory()","title":"func getHistory() -> History","type":"method"},{"path":"\/documentation\/bedrockservice\/conversereply\/getimageblock()","title":"func getImageBlock() throws -> ImageBlock","type":"method"},{"path":"\/documentation\/bedrockservice\/conversereply\/getlastmessage()","title":"func getLastMessage() -> Message","type":"method"},{"path":"\/documentation\/bedrockservice\/conversereply\/getreasoningblock()","title":"func getReasoningBlock() throws -> Reasoning","type":"method"},{"path":"\/documentation\/bedrockservice\/conversereply\/gettextreply()","title":"func getTextReply() throws -> String","type":"method"},{"path":"\/documentation\/bedrockservice\/conversereply\/gettooluse()","title":"func getToolUse() throws -> ToolUseBlock","type":"method"},{"path":"\/documentation\/bedrockservice\/conversereply\/getvideoblock()","title":"func getVideoBlock() throws -> VideoBlock","type":"method"}],"path":"\/documentation\/bedrockservice\/conversereply","title":"ConverseReply","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversereplystream\/sdkstream","title":"let sdkStream: AsyncThrowingStream<BedrockRuntimeClientTypes.ConverseStreamOutput, any Error>","type":"property"},{"path":"\/documentation\/bedrockservice\/conversereplystream\/stream","title":"let stream: AsyncThrowingStream<ConverseStreamElement, any Error>","type":"property"}],"path":"\/documentation\/bedrockservice\/conversereplystream","title":"ConverseReplyStream","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converserequest\/toolconfig","title":"ConverseRequest.ToolConfig","type":"struct"}],"path":"\/documentation\/bedrockservice\/converserequest","title":"ConverseRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/init(from:)","title":"init(from: ConverseRequestBuilder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/init(from:with:)-378ky","title":"init(from: ConverseRequestBuilder, with: ConverseReply) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/init(from:with:)-378nf","title":"init(from: ConverseRequestBuilder, with: Message) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/init(with:)-1btbf","title":"init(with: String) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/init(with:)-2pqxo","title":"init(with: BedrockModel) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/document","title":"var document: DocumentBlock?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/enablereasoning","title":"var enableReasoning: Bool","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/history","title":"var history: History","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/image","title":"var image: ImageBlock?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/maxreasoningtokens","title":"var maxReasoningTokens: Int?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/maxtokens","title":"var maxTokens: Int?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/model","title":"var model: BedrockModel","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/prompt","title":"var prompt: String?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/stopsequences","title":"var stopSequences: [String]?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/systemprompts","title":"var systemPrompts: [String]?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/temperature","title":"var temperature: Double?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/toolresult","title":"var toolResult: ToolResultBlock?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/tools","title":"var tools: [Tool]?","type":"property"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/topp","title":"var topP: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withdocument(_:)","title":"func withDocument(DocumentBlock) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withdocument(name:format:source:)","title":"func withDocument(name: String, format: DocumentBlock.Format, source: String) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withfailedtoolresult(id:)","title":"func withFailedToolResult(id: String?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withhistory(_:)-1qhny","title":"func withHistory(History) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withhistory(_:)-83rb0","title":"func withHistory([Message]) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withimage(_:)","title":"func withImage(ImageBlock) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withimage(format:source:)-3xuty","title":"func withImage(format: ImageBlock.Format, source: String) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withimage(format:source:)-5opyh","title":"func withImage(format: ImageBlock.Format, source: Data) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withmaxreasoningtokens(_:)","title":"func withMaxReasoningTokens(Int?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withmaxtokens(_:)","title":"func withMaxTokens(Int?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withprompt(_:)","title":"func withPrompt(String) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withreasoning(_:)","title":"func withReasoning(Bool) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withreasoning(maxreasoningtokens:)","title":"func withReasoning(maxReasoningTokens: Int) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withstopsequence(_:)","title":"func withStopSequence(String?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withstopsequences(_:)","title":"func withStopSequences([String]?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withsystemprompt(_:)","title":"func withSystemPrompt(String?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withsystemprompts(_:)","title":"func withSystemPrompts([String]?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtemperature(_:)","title":"func withTemperature(Double?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtool(_:)","title":"func withTool(Tool) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtool(name:inputschema:description:)","title":"func withTool(name: String, inputSchema: JSON, description: String?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:)","title":"func withToolResult(ToolResultBlock) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:id:status:)-19vw7","title":"func withToolResult(JSON, id: String?, status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:id:status:)-4od5l","title":"func withToolResult(ImageBlock, id: String?, status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:id:status:)-52t32","title":"func withToolResult(Data, id: String?, status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:id:status:)-5cxdy","title":"func withToolResult<C>(C, id: String?, status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:id:status:)-5sp8c","title":"func withToolResult(DocumentBlock, id: String?, status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:id:status:)-5vgw5","title":"func withToolResult(VideoBlock, id: String?, status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(_:id:status:)-6oml6","title":"func withToolResult(String, id: String?, status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtoolresult(id:content:status:)","title":"func withToolResult(id: String?, content: [ToolResultBlock.Content], status: ToolResultBlock.Status?) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtools(_:)","title":"func withTools([Tool]) throws -> ConverseRequestBuilder","type":"method"},{"path":"\/documentation\/bedrockservice\/converserequestbuilder\/withtopp(_:)","title":"func withTopP(Double?) throws -> ConverseRequestBuilder","type":"method"}],"path":"\/documentation\/bedrockservice\/converserequestbuilder","title":"ConverseRequestBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/deepseekrequestbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/deepseekrequestbody\/init(prompt:maxtokens:temperature:topp:stopsequences:)","title":"init(prompt: String, maxTokens: Int, temperature: Double, topP: Double, stopSequences: [String])","type":"init"}],"path":"\/documentation\/bedrockservice\/deepseekrequestbody","title":"DeepSeekRequestBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/deepseekresponsebody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/deepseekresponsebody\/gettextcompletion()","title":"func getTextCompletion() throws -> TextCompletion","type":"method"}],"path":"\/documentation\/bedrockservice\/deepseekresponsebody","title":"DeepSeekResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/init(from:)-58sox","title":"init(from: BedrockRuntimeClientTypes.DocumentBlock) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/documentblock\/init(from:)-6frc7","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/documentblock\/init(name:format:source:)-122gw","title":"init(name: String, format: DocumentBlock.Format, source: String) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/documentblock\/init(name:format:source:)-2eno9","title":"init(name: String, format: DocumentBlock.Format, source: DocumentBlock.Source) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.property","title":"let format: DocumentBlock.Format","type":"property"},{"path":"\/documentation\/bedrockservice\/documentblock\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.property","title":"let source: DocumentBlock.Source","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/getsdkdocumentblock()","title":"func getSDKDocumentBlock() throws -> BedrockRuntimeClientTypes.DocumentBlock","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/csv","title":"case csv","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/doc","title":"case doc","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/docx","title":"case docx","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/html","title":"case html","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/md","title":"case md","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/pdf","title":"case pdf","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/txt","title":"case txt","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/xls","title":"case xls","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/xlsx","title":"case xlsx","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/init(from:)-2iai0","title":"init(from: BedrockRuntimeClientTypes.DocumentFormat) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/init(from:)-2u12c","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/getsdkdocumentformat()","title":"func getSDKDocumentFormat() -> BedrockRuntimeClientTypes.DocumentFormat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/documentblock\/format-swift.enum","title":"DocumentBlock.Format","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.enum\/bytes(_:)","title":"case bytes(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.enum\/s3(_:)","title":"case s3(S3Location)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.enum\/init(bytes:)","title":"init(bytes: String) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.enum\/init(from:)-3q8y9","title":"init(from: BedrockRuntimeClientTypes.DocumentSource) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.enum\/init(from:)-8emmp","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.enum\/getsdkdocumentsource()","title":"func getSDKDocumentSource() throws -> BedrockRuntimeClientTypes.DocumentSource","type":"method"}],"path":"\/documentation\/bedrockservice\/documentblock\/source-swift.enum","title":"DocumentBlock.Source","type":"enum"}],"path":"\/documentation\/bedrockservice\/documentblock","title":"DocumentBlock","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/embeddingsparameters\/init(maxinputtokens:maxinputchars:outputvectorsize:maxpromptsize:)","title":"init(maxInputTokens: Parameter<Int>, maxInputChars: Parameter<Int>, outputVectorSize: Parameter<Int>, maxPromptSize: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/embeddingsparameters\/maxinputchars","title":"let maxInputChars: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/embeddingsparameters\/maxinputtokens","title":"let maxInputTokens: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/embeddingsparameters\/outputvectorsize","title":"let outputVectorSize: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/embeddingsparameters\/prompt","title":"let prompt: PromptParams","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/embeddingsparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/embeddingsparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/embeddingsparameters","title":"EmbeddingsParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/encryptedreasoning\/init(_:)","title":"init(Data)","type":"init"},{"path":"\/documentation\/bedrockservice\/encryptedreasoning\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/encryptedreasoning\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/bedrockservice\/encryptedreasoning\/reasoning","title":"var reasoning: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/encryptedreasoning\/getsdkreasoningblock()","title":"func getSDKReasoningBlock() -> BedrockRuntimeClientTypes.ReasoningContentBlock","type":"method"}],"path":"\/documentation\/bedrockservice\/encryptedreasoning","title":"EncryptedReasoning","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/+(_:_:)","title":"static func + (History, [Message]) -> History","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bedrockservice\/history\/init(_:)-8187l","title":"init(Message...)","type":"init"},{"path":"\/documentation\/bedrockservice\/history\/init(_:)-8t7rb","title":"init(Message)","type":"init"},{"path":"\/documentation\/bedrockservice\/history\/init(_:)-94ioh","title":"init(Slice<History>)","type":"init"},{"path":"\/documentation\/bedrockservice\/history\/init(_:)-9rwtq","title":"init([Message])","type":"init"},{"path":"\/documentation\/bedrockservice\/history\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/bedrockservice\/history\/last","title":"var last: Message?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/append(_:)","title":"func append(Message)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/subscript(_:)","title":"subscript(Int) -> Message","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/bedrockservice\/history\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/bedrockservice\/history\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/bedrockservice\/history\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bedrockservice\/history\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/bedrockservice\/history\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/map(_:)-3yrk","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/bedrockservice\/history\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bedrockservice\/history\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/init(arrayliteral:)","title":"init(arrayLiteral: Message...)","type":"init"}],"path":"\/documentation\/bedrockservice\/history\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bedrockservice\/history\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/history\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/flatmap(_:)-25yd1","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"deprecated":true,"path":"\/documentation\/bedrockservice\/history\/flatmap(_:)-3b65f","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/map(_:)-8wfh9","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/sorted(using:)-1hj13","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/sorted(using:)-67b48","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/history\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/bedrockservice\/history\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/history","title":"History","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/init(format:source:)-3zpmu","title":"init(format: ImageBlock.Format, source: ImageBlock.Source) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/imageblock\/init(format:source:)-7qtzz","title":"init(format: ImageBlock.Format, source: String) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/imageblock\/init(from:)-3wldp","title":"init(from: BedrockRuntimeClientTypes.ImageBlock) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/imageblock\/init(from:)-hxrs","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.property","title":"let format: ImageBlock.Format","type":"property"},{"path":"\/documentation\/bedrockservice\/imageblock\/source-swift.property","title":"let source: ImageBlock.Source","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/getsdkimageblock()","title":"func getSDKImageBlock() throws -> BedrockRuntimeClientTypes.ImageBlock","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/gif","title":"case gif","type":"case"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/jpeg","title":"case jpeg","type":"case"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/png","title":"case png","type":"case"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/webp","title":"case webp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/init(from:)-33dal","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/init(from:)-3aa6i","title":"init(from: BedrockRuntimeClientTypes.ImageFormat) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/getsdkimageformat()","title":"func getSDKImageFormat() -> BedrockRuntimeClientTypes.ImageFormat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/imageblock\/format-swift.enum","title":"ImageBlock.Format","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/source-swift.enum\/bytes(_:)","title":"case bytes(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/imageblock\/source-swift.enum\/s3(_:)","title":"case s3(S3Location)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/source-swift.enum\/init(from:)-8ydqo","title":"init(from: BedrockRuntimeClientTypes.ImageSource) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/imageblock\/source-swift.enum\/init(from:)-94xd4","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageblock\/source-swift.enum\/getsdkimagesource()","title":"func getSDKImageSource() throws -> BedrockRuntimeClientTypes.ImageSource","type":"method"}],"path":"\/documentation\/bedrockservice\/imageblock\/source-swift.enum","title":"ImageBlock.Source","type":"enum"}],"path":"\/documentation\/bedrockservice\/imageblock","title":"ImageBlock","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagegenerationoutput\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagegenerationoutput\/images","title":"let images: [Data]","type":"property"}],"path":"\/documentation\/bedrockservice\/imagegenerationoutput","title":"ImageGenerationOutput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagegenerationparameters\/init(nrofimages:cfgscale:seed:)","title":"init(nrOfImages: Parameter<Int>, cfgScale: Parameter<Double>, seed: Parameter<Int>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagegenerationparameters\/cfgscale","title":"let cfgScale: Parameter<Double>","type":"property"},{"path":"\/documentation\/bedrockservice\/imagegenerationparameters\/nrofimages","title":"let nrOfImages: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/imagegenerationparameters\/seed","title":"let seed: Parameter<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagegenerationparameters\/validate(nrofimages:cfgscale:seed:)","title":"func validate(nrOfImages: Int?, cfgScale: Double?, seed: Int?) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagegenerationparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/imagegenerationparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/imagegenerationparameters","title":"ImageGenerationParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageresolution\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageresolution\/height","title":"let height: Int","type":"property"},{"path":"\/documentation\/bedrockservice\/imageresolution\/width","title":"let width: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imageresolution\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/imageresolution\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/imageresolution","title":"ImageResolution","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagevariationparameters\/init(images:maxpromptsize:maxnegativepromptsize:similarity:)","title":"init(images: Parameter<Int>, maxPromptSize: Int, maxNegativePromptSize: Int, similarity: Parameter<Double>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagevariationparameters\/images","title":"let images: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/imagevariationparameters\/negativeprompt","title":"let negativePrompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/imagevariationparameters\/prompt","title":"let prompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/imagevariationparameters\/similarity","title":"let similarity: Parameter<Double>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagevariationparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/imagevariationparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/imagevariationparameters","title":"ImageVariationParameters","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/invokemodelresponse\/getembeddings()","title":"func getEmbeddings() throws -> Embeddings","type":"method"},{"path":"\/documentation\/bedrockservice\/invokemodelresponse\/getgeneratedimage()","title":"func getGeneratedImage() throws -> ImageGenerationOutput","type":"method"},{"path":"\/documentation\/bedrockservice\/invokemodelresponse\/gettextcompletion()","title":"func getTextCompletion() throws -> TextCompletion","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/invokemodelresponse\/bodytype\/embeddings(_:)","title":"case embeddings(any ContainsEmbeddings)","type":"case"},{"path":"\/documentation\/bedrockservice\/invokemodelresponse\/bodytype\/imagegeneration(_:)","title":"case imageGeneration(any ContainsImageGeneration)","type":"case"},{"path":"\/documentation\/bedrockservice\/invokemodelresponse\/bodytype\/textcompletion(_:)","title":"case textCompletion(any ContainsTextCompletion)","type":"case"}],"path":"\/documentation\/bedrockservice\/invokemodelresponse\/bodytype","title":"InvokeModelResponse.BodyType","type":"enum"}],"path":"\/documentation\/bedrockservice\/invokemodelresponse","title":"InvokeModelResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/json\/init(from:)-2ky4s","title":"init(from: Data) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/json\/init(from:)-8wy0r","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/json\/init(from:)-94d53","title":"init(from: String) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/json\/init(with:)","title":"init(with: JSONValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/json\/value","title":"let value: JSONValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/json\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/bedrockservice\/json\/getvalue()","title":"func getValue<T>() -> T?","type":"method"},{"path":"\/documentation\/bedrockservice\/json\/todocument()","title":"func toDocument() throws -> Document","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/json\/subscript(_:)-639k7","title":"subscript<T>(String) -> T?","type":"subscript"},{"path":"\/documentation\/bedrockservice\/json\/subscript(_:)-96pqu","title":"subscript(String) -> JSONValue?","type":"subscript"}],"path":"\/documentation\/bedrockservice\/json","title":"JSON","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/llamarequestbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/llamarequestbody\/init(prompt:maxtokens:temperature:topp:)","title":"init(prompt: String, maxTokens: Int?, temperature: Double?, topP: Double?)","type":"init"}],"path":"\/documentation\/bedrockservice\/llamarequestbody","title":"LlamaRequestBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/message\/init(_:)-1qvzn","title":"init(ConverseOutput) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(_:)-29cd5","title":"init(String)","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(_:)-2vq7s","title":"init(ToolResultBlock)","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(_:)-7nrsn","title":"init(ImageBlock)","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(_:)-f2rd","title":"init(ToolUseBlock)","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(_:imageblock:)","title":"init(String, imageBlock: ImageBlock)","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(_:imageformat:imagebytes:)","title":"init(String, imageFormat: ImageBlock.Format, imageBytes: String) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(from:)-65qf4","title":"init(from: BedrockRuntimeClientTypes.Message) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(from:)-79fij","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(from:content:stopreason:)","title":"init(from: Role, content: [Content], stopReason: Message.StopReason?)","type":"init"},{"path":"\/documentation\/bedrockservice\/message\/init(imageformat:imagebytes:)","title":"init(imageFormat: ImageBlock.Format, imageBytes: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/message\/content","title":"let content: [Content]","type":"property"},{"path":"\/documentation\/bedrockservice\/message\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/bedrockservice\/message\/role","title":"let role: Role","type":"property"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.property","title":"let stopReason: Message.StopReason?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/message\/getsdkmessage()","title":"func getSDKMessage() throws -> BedrockRuntimeClientTypes.Message","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/gettooluse()","title":"func getToolUse() -> ToolUseBlock?","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/hasencryptedreasoningcontent()","title":"func hasEncryptedReasoningContent() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/hasimagecontent()","title":"func hasImageContent() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/hasreasoningcontent()","title":"func hasReasoningContent() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/hastextcontent()","title":"func hasTextContent() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/hastoolresult()","title":"func hasToolResult() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/hastooluse()","title":"func hasToolUse() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/hasvideocontent()","title":"func hasVideoContent() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/message\/textcontent()","title":"func textContent() -> String?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/message\/stopreason(fromsdk:)","title":"static func stopReason(fromSDK: BedrockRuntimeClientTypes.StopReason?) -> Message.StopReason?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/contentfiltered","title":"case contentFiltered","type":"case"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/endturn","title":"case endTurn","type":"case"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/guardrailintervened","title":"case guardrailIntervened","type":"case"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/maxtokens","title":"case maxTokens","type":"case"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/stopsequence","title":"case stopSequence","type":"case"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/tooluse","title":"case toolUse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/message\/stopreason-swift.enum","title":"Message.StopReason","type":"enum"}],"path":"\/documentation\/bedrockservice\/message","title":"Message","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/modelsummary\/bedrockmodel","title":"let bedrockModel: BedrockModel?","type":"property"},{"path":"\/documentation\/bedrockservice\/modelsummary\/modelarn","title":"let modelArn: String","type":"property"},{"path":"\/documentation\/bedrockservice\/modelsummary\/modelid","title":"let modelId: String","type":"property"},{"path":"\/documentation\/bedrockservice\/modelsummary\/modellifecylcestatus","title":"let modelLifecylceStatus: String","type":"property"},{"path":"\/documentation\/bedrockservice\/modelsummary\/modelname","title":"let modelName: String","type":"property"},{"path":"\/documentation\/bedrockservice\/modelsummary\/providername","title":"let providerName: String","type":"property"},{"path":"\/documentation\/bedrockservice\/modelsummary\/responsestreamingsupported","title":"let responseStreamingSupported: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/modelsummary\/getmodelsummary(from:)","title":"static func getModelSummary(from: BedrockClientTypes.FoundationModelSummary) throws -> ModelSummary","type":"method"}],"path":"\/documentation\/bedrockservice\/modelsummary","title":"ModelSummary","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/novarequestbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/novarequestbody\/init(prompt:maxtokens:temperature:topp:topk:stopsequences:)","title":"init(prompt: String, maxTokens: Int?, temperature: Double?, topP: Double?, topK: Int?, stopSequences: [String]?)","type":"init"}],"path":"\/documentation\/bedrockservice\/novarequestbody","title":"NovaRequestBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/novaresponsebody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/novaresponsebody\/gettextcompletion()","title":"func getTextCompletion() throws -> TextCompletion","type":"method"}],"path":"\/documentation\/bedrockservice\/novaresponsebody","title":"NovaResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/openairequestbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/openairequestbody\/init(prompt:maxtokens:temperature:topp:)","title":"init(prompt: String, maxTokens: Int, temperature: Double?, topP: Double?)","type":"init"}],"path":"\/documentation\/bedrockservice\/openairequestbody","title":"OpenAIRequestBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/openairesponsebody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/openairesponsebody\/gettextcompletion()","title":"func getTextCompletion() throws -> TextCompletion","type":"method"}],"path":"\/documentation\/bedrockservice\/openairesponsebody","title":"OpenAIResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/parameter\/init(_:minvalue:maxvalue:defaultvalue:)","title":"init(ParameterName, minValue: T?, maxValue: T?, defaultValue: T?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/parameter\/defaultvalue","title":"let defaultValue: T?","type":"property"},{"path":"\/documentation\/bedrockservice\/parameter\/issupported","title":"let isSupported: Bool","type":"property"},{"path":"\/documentation\/bedrockservice\/parameter\/maxvalue","title":"let maxValue: T?","type":"property"},{"path":"\/documentation\/bedrockservice\/parameter\/minvalue","title":"let minValue: T?","type":"property"},{"path":"\/documentation\/bedrockservice\/parameter\/name","title":"let name: ParameterName","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/parameter\/validatevalue(_:)","title":"func validateValue(T) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/parameter\/notsupported(_:)","title":"static func notSupported(ParameterName) -> Parameter<T>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/parameter","title":"Parameter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/promptparams\/maxsize","title":"let maxSize: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/promptparams\/validatevalue(_:)","title":"func validateValue(String) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/promptparams\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/promptparams\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/promptparams","title":"PromptParams","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/init(awsregionname:)","title":"init?(awsRegionName: String)","type":"init"},{"path":"\/documentation\/bedrockservice\/region\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/partition","title":"var partition: AWSPartition","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/isapregion()","title":"func isAPRegion() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/region\/iseuregion()","title":"func isEURegion() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/region\/isusregion()","title":"func isUSRegion() -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/afsouth1","title":"static var afsouth1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apeast1","title":"static var apeast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apnortheast1","title":"static var apnortheast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apnortheast2","title":"static var apnortheast2: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apnortheast3","title":"static var apnortheast3: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsouth1","title":"static var apsouth1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsouth2","title":"static var apsouth2: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsoutheast1","title":"static var apsoutheast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsoutheast2","title":"static var apsoutheast2: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsoutheast3","title":"static var apsoutheast3: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsoutheast4","title":"static var apsoutheast4: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsoutheast5","title":"static var apsoutheast5: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/apsoutheast7","title":"static var apsoutheast7: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/cacentral1","title":"static var cacentral1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/cawest1","title":"static var cawest1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/cnnorth1","title":"static var cnnorth1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/cnnorthwest1","title":"static var cnnorthwest1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/eucentral1","title":"static var eucentral1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/eucentral2","title":"static var eucentral2: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/euisoewest1","title":"static var euisoewest1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/eunorth1","title":"static var eunorth1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/eusouth1","title":"static var eusouth1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/eusouth2","title":"static var eusouth2: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/euwest1","title":"static var euwest1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/euwest2","title":"static var euwest2: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/euwest3","title":"static var euwest3: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/ilcentral1","title":"static var ilcentral1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/mecentral1","title":"static var mecentral1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/mesouth1","title":"static var mesouth1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/mxcentral1","title":"static var mxcentral1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/saeast1","title":"static var saeast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/useast1","title":"static var useast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/useast2","title":"static var useast2: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/usgoveast1","title":"static var usgoveast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/usgovwest1","title":"static var usgovwest1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/usisobeast1","title":"static var usisobeast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/usisoeast1","title":"static var usisoeast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/usisofeast1","title":"static var usisofeast1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/usisofsouth1","title":"static var usisofsouth1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/usisowest1","title":"static var usisowest1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/uswest1","title":"static var uswest1: Region","type":"property"},{"path":"\/documentation\/bedrockservice\/region\/uswest2","title":"static var uswest2: Region","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/other(_:)","title":"static func other(String) -> Region","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bedrockservice\/region\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/region\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/region\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/bedrockservice\/region\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/region","title":"Region","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/metadata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/bedrockservice\/responsemetadata\/metadata","title":"ResponseMetadata.Metadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/metrics-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/metrics-swift.struct\/latencyms","title":"let latencyMs: Int","type":"property"}],"path":"\/documentation\/bedrockservice\/responsemetadata\/metrics-swift.struct","title":"ResponseMetadata.Metrics","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/usage-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/usage-swift.struct\/inputtokens","title":"let inputTokens: Int","type":"property"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/usage-swift.struct\/outputtokens","title":"let outputTokens: Int","type":"property"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/usage-swift.struct\/totaltokens","title":"let totalTokens: Int","type":"property"}],"path":"\/documentation\/bedrockservice\/responsemetadata\/usage-swift.struct","title":"ResponseMetadata.Usage","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/metrics-swift.property","title":"var metrics: ResponseMetadata.Metrics?","type":"property"},{"path":"\/documentation\/bedrockservice\/responsemetadata\/usage-swift.property","title":"var usage: ResponseMetadata.Usage?","type":"property"}],"path":"\/documentation\/bedrockservice\/responsemetadata","title":"ResponseMetadata","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/role\/==(_:_:)","title":"static func == (Role, Role) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/role\/init(from:)-6u8d5","title":"init(from: BedrockRuntimeClientTypes.ConversationRole) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/role\/init(from:)-722ba","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/role\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/role\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/bedrockservice\/role\/getsdkconversationrole()","title":"func getSDKConversationRole() -> BedrockRuntimeClientTypes.ConversationRole","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/role\/assistant","title":"static let assistant: Role","type":"property"},{"path":"\/documentation\/bedrockservice\/role\/user","title":"static let user: Role","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/role\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/role\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/role","title":"Role","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/s3location\/init(bucketowner:uri:)","title":"init(bucketOwner: String?, uri: String)","type":"init"},{"path":"\/documentation\/bedrockservice\/s3location\/init(from:)-1f94b","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/s3location\/init(from:)-1wxdf","title":"init(from: BedrockRuntimeClientTypes.S3Location) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/s3location\/bucketowner","title":"let bucketOwner: String?","type":"property"},{"path":"\/documentation\/bedrockservice\/s3location\/uri","title":"let uri: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/s3location\/getsdks3location()","title":"func getSDKS3Location() -> BedrockRuntimeClientTypes.S3Location","type":"method"}],"path":"\/documentation\/bedrockservice\/s3location","title":"S3Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/standardconverse\/init(parameters:features:)","title":"init(parameters: ConverseParameters, features: [ConverseFeature])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/standardconverse\/conversefeatures","title":"let converseFeatures: [ConverseFeature]","type":"property"},{"path":"\/documentation\/bedrockservice\/standardconverse\/converseparameters","title":"let converseParameters: ConverseParameters","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/standardconverse\/getconversefeatures()","title":"func getConverseFeatures() -> [ConverseFeature]","type":"method"},{"path":"\/documentation\/bedrockservice\/standardconverse\/getconverseparameters()","title":"func getConverseParameters() -> ConverseParameters","type":"method"},{"path":"\/documentation\/bedrockservice\/standardconverse\/getname()","title":"func getName() -> String","type":"method"}],"path":"\/documentation\/bedrockservice\/standardconverse","title":"StandardConverse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/stopsequenceparams\/init(maxsequences:defaultvalue:)","title":"init(maxSequences: Int?, defaultValue: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/stopsequenceparams\/defaultvalue","title":"let defaultValue: [String]?","type":"property"},{"path":"\/documentation\/bedrockservice\/stopsequenceparams\/issupported","title":"let isSupported: Bool","type":"property"},{"path":"\/documentation\/bedrockservice\/stopsequenceparams\/maxsequences","title":"let maxSequences: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/stopsequenceparams\/validatevalue(_:)","title":"func validateValue([String]) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/stopsequenceparams\/notsupported()","title":"static func notSupported() -> StopSequenceParams","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/stopsequenceparams\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/stopsequenceparams\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/stopsequenceparams","title":"StopSequenceParams","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/textcompletion\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/bedrockservice\/textcompletion\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/textcompletion\/completion","title":"let completion: String","type":"property"},{"path":"\/documentation\/bedrockservice\/textcompletion\/reasoning","title":"let reasoning: String?","type":"property"}],"path":"\/documentation\/bedrockservice\/textcompletion","title":"TextCompletion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/init(temperature:maxtokens:topp:topk:stopsequences:maxpromptsize:)","title":"init(temperature: Parameter<Double>, maxTokens: Parameter<Int>, topP: Parameter<Double>, topK: Parameter<Int>, stopSequences: StopSequenceParams, maxPromptSize: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/maxtokens","title":"let maxTokens: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/prompt","title":"let prompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/stopsequences","title":"let stopSequences: StopSequenceParams","type":"property"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/temperature","title":"let temperature: Parameter<Double>","type":"property"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/topk","title":"let topK: Parameter<Int>","type":"property"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/topp","title":"let topP: Parameter<Double>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/textgenerationparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/textgenerationparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/textgenerationparameters","title":"TextGenerationParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/texttoimageparameters\/init(maxpromptsize:maxnegativepromptsize:)","title":"init(maxPromptSize: Int, maxNegativePromptSize: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/texttoimageparameters\/negativeprompt","title":"let negativePrompt: PromptParams","type":"property"},{"path":"\/documentation\/bedrockservice\/texttoimageparameters\/prompt","title":"let prompt: PromptParams","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/texttoimageparameters\/validate(prompt:negativeprompt:)","title":"func validate(prompt: String?, negativePrompt: String?) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/texttoimageparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/texttoimageparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/texttoimageparameters","title":"TextToImageParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/titanembeddingsbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/titanembeddingsbody\/init(prompt:dimensions:normalize:)","title":"init(prompt: String, dimensions: Int, normalize: Bool)","type":"init"}],"path":"\/documentation\/bedrockservice\/titanembeddingsbody","title":"TitanEmbeddingsBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/titanembeddingsresponsebody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/titanembeddingsresponsebody\/getembeddings()","title":"func getEmbeddings() -> Embeddings","type":"method"}],"path":"\/documentation\/bedrockservice\/titanembeddingsresponsebody","title":"TitanEmbeddingsResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/titanrequestbody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/titanrequestbody\/init(prompt:maxtokens:temperature:topp:stopsequences:)","title":"init(prompt: String, maxTokens: Int, temperature: Double, topP: Double, stopSequences: [String])","type":"init"}],"path":"\/documentation\/bedrockservice\/titanrequestbody","title":"TitanRequestBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/titanresponsebody\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/titanresponsebody\/gettextcompletion()","title":"func getTextCompletion() throws -> TextCompletion","type":"method"}],"path":"\/documentation\/bedrockservice\/titanresponsebody","title":"TitanResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tool\/init(from:)-1x3l1","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/tool\/init(from:)-278se","title":"init(from: BedrockRuntimeClientTypes.ToolSpecification) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/tool\/init(name:inputschema:description:)","title":"init(name: String, inputSchema: JSON, description: String?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tool\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/bedrockservice\/tool\/inputschema","title":"let inputSchema: JSON","type":"property"},{"path":"\/documentation\/bedrockservice\/tool\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/bedrockservice\/tool\/tooldescription","title":"let toolDescription: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tool\/getsdktoolspecification()","title":"func getSDKToolSpecification() throws -> BedrockRuntimeClientTypes.ToolSpecification","type":"method"}],"path":"\/documentation\/bedrockservice\/tool","title":"Tool","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(_:id:status:)-21q9e","title":"init<T>(T, id: String, status: ToolResultBlock.Status?) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(_:id:status:)-243b5","title":"init(JSON, id: String, status: ToolResultBlock.Status?)","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(_:id:status:)-7gj8r","title":"init(String, id: String, status: ToolResultBlock.Status?)","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(_:id:status:)-8yi7x","title":"init(ImageBlock, id: String, status: ToolResultBlock.Status?)","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(_:id:status:)-9tskg","title":"init(VideoBlock, id: String, status: ToolResultBlock.Status?)","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(_:id:status:)-b04d","title":"init(Data, id: String, status: ToolResultBlock.Status?) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(_:id:status:)-o9ol","title":"init(DocumentBlock, id: String, status: ToolResultBlock.Status?)","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(from:)-1ebd0","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(from:)-6708b","title":"init(from: BedrockRuntimeClientTypes.ToolResultBlock) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/init(id:content:status:)","title":"init(id: String, content: [ToolResultBlock.Content], status: ToolResultBlock.Status?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.property","title":"let content: [ToolResultBlock.Content]","type":"property"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/status-swift.property","title":"let status: ToolResultBlock.Status?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/getsdktoolresultblock()","title":"func getSDKToolResultBlock() throws -> BedrockRuntimeClientTypes.ToolResultBlock","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/failed(_:)","title":"static func failed(String) -> ToolResultBlock","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/document(_:)","title":"case document(DocumentBlock)","type":"case"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/image(_:)","title":"case image(ImageBlock)","type":"case"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/json(_:)","title":"case json(JSON)","type":"case"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/video(_:)","title":"case video(VideoBlock)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/toolresultblock\/content-swift.enum","title":"ToolResultBlock.Content","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/status-swift.enum\/error","title":"case error","type":"case"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/status-swift.enum\/success","title":"case success","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/status-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/toolresultblock\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/toolresultblock\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/toolresultblock\/status-swift.enum","title":"ToolResultBlock.Status","type":"enum"}],"path":"\/documentation\/bedrockservice\/toolresultblock","title":"ToolResultBlock","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tooluseblock\/init(from:)-59yy0","title":"init(from: BedrockRuntimeClientTypes.ToolUseBlock) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/tooluseblock\/init(from:)-onr0","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/tooluseblock\/init(id:name:input:)","title":"init(id: String, name: String, input: JSON)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tooluseblock\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/bedrockservice\/tooluseblock\/input","title":"let input: JSON","type":"property"},{"path":"\/documentation\/bedrockservice\/tooluseblock\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tooluseblock\/getsdktooluseblock()","title":"func getSDKToolUseBlock() throws -> BedrockRuntimeClientTypes.ToolUseBlock","type":"method"}],"path":"\/documentation\/bedrockservice\/tooluseblock","title":"ToolUseBlock","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/init(format:source:)-2jx1s","title":"init(format: VideoBlock.Format, source: String) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/videoblock\/init(format:source:)-493wv","title":"init(format: VideoBlock.Format, source: S3Location) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/videoblock\/init(format:source:)-4zy2h","title":"init(format: VideoBlock.Format, source: VideoBlock.Source) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/videoblock\/init(from:)-6fkfi","title":"init(from: BedrockRuntimeClientTypes.VideoBlock) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/videoblock\/init(from:)-9wlo3","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.property","title":"let format: VideoBlock.Format","type":"property"},{"path":"\/documentation\/bedrockservice\/videoblock\/source-swift.property","title":"let source: VideoBlock.Source","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/getsdkvideoblock()","title":"func getSDKVideoBlock() throws -> BedrockRuntimeClientTypes.VideoBlock","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/flv","title":"case flv","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/mkv","title":"case mkv","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/mov","title":"case mov","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/mp4","title":"case mp4","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/mpeg","title":"case mpeg","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/mpg","title":"case mpg","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/threegp","title":"case threeGp","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/webm","title":"case webm","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/wmv","title":"case wmv","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/init(from:)-4nif7","title":"init(from: BedrockRuntimeClientTypes.VideoFormat) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/init(from:)-8un2b","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/getsdkvideoformat()","title":"func getSDKVideoFormat() throws -> BedrockRuntimeClientTypes.VideoFormat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/videoblock\/format-swift.enum","title":"VideoBlock.Format","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/source-swift.enum\/bytes(_:)","title":"case bytes(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/videoblock\/source-swift.enum\/s3(_:)","title":"case s3(S3Location)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/source-swift.enum\/init(from:)-1wq8o","title":"init(from: BedrockRuntimeClientTypes.VideoSource) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/videoblock\/source-swift.enum\/init(from:)-nh5a","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/videoblock\/source-swift.enum\/getsdkvideosource()","title":"func getSDKVideoSource() throws -> BedrockRuntimeClientTypes.VideoSource","type":"method"}],"path":"\/documentation\/bedrockservice\/videoblock\/source-swift.enum","title":"VideoBlock.Source","type":"enum"}],"path":"\/documentation\/bedrockservice\/videoblock","title":"VideoBlock","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversestreamingrequest","title":"ConverseStreamingRequest","type":"typealias"},{"path":"\/documentation\/bedrockservice\/conversestreamingresponse","title":"ConverseStreamingResponse","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockauthentication\/apikey(key:)","title":"case apiKey(key: String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrockauthentication\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrockauthentication\/profile(profilename:)","title":"case profile(profileName: String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrockauthentication\/sso(profilename:)","title":"case sso(profileName: String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrockauthentication\/static(accesskey:secretkey:sessiontoken:)","title":"case `static`(accessKey: String, secretKey: String, sessionToken: String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrockauthentication\/webidentity(token:rolearn:region:notification:)","title":"case webIdentity(token: String, roleARN: String, region: Region, notification: () -> Void)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrockauthentication\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bedrockservice\/bedrockauthentication","title":"BedrockAuthentication","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/==(_:_:)","title":"static func == (BedrockLibraryError, BedrockLibraryError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/converserequestbuilder(_:)","title":"case ConverseRequestBuilder(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/authenticationfailed(_:)","title":"case authenticationFailed(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/completionnotfound(_:)","title":"case completionNotFound(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/decodingerror(_:)","title":"case decodingError(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/encodingerror(_:)","title":"case encodingError(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/inputtoolong(_:)","title":"case inputTooLong(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalid(_:)","title":"case invalid(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidconversereply(_:)","title":"case invalidConverseReply(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidmodality(_:_:_:)","title":"case invalidModality(BedrockModel, any Modality, String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidname(_:)","title":"case invalidName(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidparameter(_:_:)","title":"case invalidParameter(ParameterName, String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidprompt(_:)","title":"case invalidPrompt(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidsdkresponse(_:)","title":"case invalidSDKResponse(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidsdkresponsebody(_:)","title":"case invalidSDKResponseBody(Data?)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidsdktype(_:)","title":"case invalidSDKType(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invalidstopsequences(_:_:)","title":"case invalidStopSequences([String], String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/invaliduri(_:)","title":"case invalidURI(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/notfound(_:)","title":"case notFound(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/notimplemented(_:)","title":"case notImplemented(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/notsupported(_:)","title":"case notSupported(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/streamingerror(_:)","title":"case streamingError(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/unknownerror(_:)","title":"case unknownError(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/message","title":"var message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bedrockservice\/bedrocklibraryerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/bedrocklibraryerror","title":"BedrockLibraryError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/content\/document(_:)","title":"case document(DocumentBlock)","type":"case"},{"path":"\/documentation\/bedrockservice\/content\/encryptedreasoning(_:)","title":"case encryptedReasoning(EncryptedReasoning)","type":"case"},{"path":"\/documentation\/bedrockservice\/content\/image(_:)","title":"case image(ImageBlock)","type":"case"},{"path":"\/documentation\/bedrockservice\/content\/reasoning(_:)","title":"case reasoning(Reasoning)","type":"case"},{"path":"\/documentation\/bedrockservice\/content\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/bedrockservice\/content\/toolresult(_:)","title":"case toolResult(ToolResultBlock)","type":"case"},{"path":"\/documentation\/bedrockservice\/content\/tooluse(_:)","title":"case toolUse(ToolUseBlock)","type":"case"},{"path":"\/documentation\/bedrockservice\/content\/video(_:)","title":"case video(VideoBlock)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/content\/init(from:)-2dkiv","title":"init(from: BedrockRuntimeClientTypes.ContentBlock) throws","type":"init"},{"path":"\/documentation\/bedrockservice\/content\/init(from:)-5p280","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/content\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/content\/getsdkcontentblock()","title":"func getSDKContentBlock() throws -> BedrockRuntimeClientTypes.ContentBlock","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/isdocument()","title":"func isDocument() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/isencryptedreasoning()","title":"func isEncryptedReasoning() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/isimage()","title":"func isImage() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/isreasoning()","title":"func isReasoning() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/istext()","title":"func isText() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/istoolresult()","title":"func isToolResult() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/istooluse()","title":"func isToolUse() -> Bool","type":"method"},{"path":"\/documentation\/bedrockservice\/content\/isvideo()","title":"func isVideo() -> Bool","type":"method"}],"path":"\/documentation\/bedrockservice\/content","title":"Content","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/contenttype\/json","title":"case json","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/contenttype\/headervalue","title":"var headerValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/contenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/contenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/contenttype","title":"ContentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversefeature\/document","title":"case document","type":"case"},{"path":"\/documentation\/bedrockservice\/conversefeature\/reasoning","title":"case reasoning","type":"case"},{"path":"\/documentation\/bedrockservice\/conversefeature\/systemprompts","title":"case systemPrompts","type":"case"},{"path":"\/documentation\/bedrockservice\/conversefeature\/textgeneration","title":"case textGeneration","type":"case"},{"path":"\/documentation\/bedrockservice\/conversefeature\/tooluse","title":"case toolUse","type":"case"},{"path":"\/documentation\/bedrockservice\/conversefeature\/vision","title":"case vision","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversefeature\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversefeature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/conversefeature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversefeature\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversefeature\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversefeature\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/bedrockservice\/conversefeature\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bedrockservice\/conversefeature\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/conversefeature","title":"ConverseFeature","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/conversestreamelement\/messagecomplete(_:)","title":"case messageComplete(Message)","type":"case"},{"path":"\/documentation\/bedrockservice\/conversestreamelement\/messagestart(_:)","title":"case messageStart(Role)","type":"case"},{"path":"\/documentation\/bedrockservice\/conversestreamelement\/metadata(_:)","title":"case metaData(ResponseMetadata)","type":"case"},{"path":"\/documentation\/bedrockservice\/conversestreamelement\/reasoning(_:_:)","title":"case reasoning(Int, String)","type":"case"},{"path":"\/documentation\/bedrockservice\/conversestreamelement\/text(_:_:)","title":"case text(Int, String)","type":"case"},{"path":"\/documentation\/bedrockservice\/conversestreamelement\/tooluse(_:_:)","title":"case toolUse(Int, ToolUseBlock)","type":"case"}],"path":"\/documentation\/bedrockservice\/conversestreamelement","title":"ConverseStreamElement","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagequality\/premium","title":"case premium","type":"case"},{"path":"\/documentation\/bedrockservice\/imagequality\/standard","title":"case standard","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagequality\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagequality\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/imagequality\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagequality\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagequality\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/imagequality\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/bedrockservice\/imagequality\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bedrockservice\/imagequality\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/imagequality","title":"ImageQuality","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/array(_:)","title":"case array([JSONValue])","type":"case"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/bool(_:)","title":"case bool(Bool)","type":"case"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/double(_:)","title":"case double(Double)","type":"case"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/int(_:)","title":"case int(Int)","type":"case"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/null","title":"case null","type":"case"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/object(_:)","title":"case object([String : JSONValue])","type":"case"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/init(_:)","title":"init(Any?)","type":"init"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/jsonvalue\/subscript(_:)","title":"subscript<T>(String) -> T?","type":"subscript"}],"path":"\/documentation\/bedrockservice\/jsonvalue","title":"JSONValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/parametername\/cfgscale","title":"case cfgScale","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/images","title":"case images","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/maxinputtextchar","title":"case maxInputTextChar","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/maxinputtexttoken","title":"case maxInputTextToken","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/maxreasoningtokens","title":"case maxReasoningTokens","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/maxtokens","title":"case maxTokens","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/nrofimages","title":"case nrOfImages","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/outputvectorsize","title":"case outputVectorSize","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/resolution","title":"case resolution","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/seed","title":"case seed","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/similarity","title":"case similarity","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/temperature","title":"case temperature","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/topk","title":"case topK","type":"case"},{"path":"\/documentation\/bedrockservice\/parametername\/topp","title":"case topP","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/parametername\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/parametername\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/parametername","title":"ParameterName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tasktype\/backgroundremoval","title":"case backgroundRemoval","type":"case"},{"path":"\/documentation\/bedrockservice\/tasktype\/colorguidedgeneration","title":"case colorGuidedGeneration","type":"case"},{"path":"\/documentation\/bedrockservice\/tasktype\/imagevariation","title":"case imageVariation","type":"case"},{"path":"\/documentation\/bedrockservice\/tasktype\/inpainting","title":"case inpainting","type":"case"},{"path":"\/documentation\/bedrockservice\/tasktype\/outpainting","title":"case outpainting","type":"case"},{"path":"\/documentation\/bedrockservice\/tasktype\/texttoimage","title":"case textToImage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tasktype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tasktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bedrockservice\/tasktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tasktype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tasktype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/tasktype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/bedrockservice\/tasktype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bedrockservice\/tasktype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bedrockservice\/tasktype","title":"TaskType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bedrockservice\/smithy\/smithydocument\/tojson()","title":"func toJSON() throws -> JSON","type":"method"}],"path":"\/documentation\/bedrockservice\/smithy\/smithydocument","title":"SmithyDocument","type":"extension"}],"path":"\/documentation\/bedrockservice\/smithy","title":"Smithy","type":"extension"}],"icon":"bedrock.png","path":"\/documentation\/bedrockservice","title":"BedrockService","type":"module"}]},"references":{"bedrock.png":{"alt":"BedrockService","identifier":"bedrock.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/BedrockService\/bedrock.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":2}}