name: IntegrationTests

on:
  workflow_call:
    inputs:
      name:
        type: string
        description: "The name of the workflow used for the concurrency group."
        required: true
      # We pass the list of examples here, but we can't pass an array as argument
      # Instead, we pass a String with a valid JSON array.
      # The workaround is mentioned here https://github.com/orgs/community/discussions/11692
      examples:
        type: string
        description: "The list of examples to run. Pass a String with a valid JSON array such as \"[ 'Converse', 'ConverseStream' ]\""
        required: true
        default: ""
      examples_enabled:
        type: boolean
        description: "Boolean to enable the compilation of examples. Defaults to true."
        default: true
      check_foundation_enabled:
        type: boolean
        description: "Boolean to enable the check for Foundation dependency. Defaults to true."
        default: true
      matrix_linux_command:
        type: string
        description: "The command of the current Swift version linux matrix job to execute."
        required: true
      matrix_linux_swift_container_image:
        type: string
        description: "Container image for the matrix job. Defaults to matching Swift 6.1 Ubuntu image."
        default: "swiftlang/swift:6.1-noble"

## We are cancelling previously triggered workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.name }}
  cancel-in-progress: true

jobs:
  test-examples:
    name: Test Examples/${{ matrix.examples }} on ${{ matrix.swift.swift_version }}
    if: ${{ inputs.examples_enabled }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        examples: ${{ fromJson(inputs.examples) }}

        # We are using only one Swift version
        swift:
          - image: ${{ inputs.matrix_linux_swift_container_image }}
    container:
      image: ${{ matrix.swift.image }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mark the workspace as safe
        working-directory: ${{ github.event.repository.name }}  # until we can use action/checkout@v4
        # https://github.com/actions/checkout/issues/766
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Run matrix job
        working-directory: ${{ github.event.repository.name }}  # until we can use action/checkout@v4
        env:
          COMMAND: ${{ inputs.matrix_linux_command }}
          EXAMPLE: ${{ matrix.examples }}
        run: |
          .github/workflows/scripts/integration_tests.sh

  playground-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Web playground backend build
        working-directory: Examples/web-playground/backend
        run: swift build

  check-foundation:
    name: No dependencies on Foundation
    if: ${{ inputs.check_foundation_enabled }}
    runs-on: ubuntu-latest
    steps:
      - name: Install OS dependencies
        run: |
          apt-get update
          apt-get install openssl libssl-dev
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Mark the workspace as safe
        # https://github.com/actions/checkout/issues/766
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - name: Check for Foundation or ICU dependency
        run: |
          .github/workflows/scripts/check-link-foundation.sh
